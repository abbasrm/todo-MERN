{"version":3,"sources":["components/Tasks/Tasks/Tasks.module.css","components/Tasks/CompletedTasks/CompletedTasks.module.css","components/Tasks/UncompletedTasks/UncompletedTasks.module.css","components/Navigation/Navigation.module.css","components/UI/AccodionSingle/AccodionSingle.module.css","hoc/todoStyle.js","components/UI/DeleteButton.js","components/Tasks/Task/Task.js","actions/accordion.js","actions/actionTypes.js","actions/tasks.js","actions/completedTasks.js","actions/uncompletedTasks.js","components/UI/AccodionSingle/AccodionSingle.js","components/Tasks/Tasks/Tasks.js","components/Form/Form.js","hoc/hoc.js","App.js","components/Tasks/CompletedTasks/CompletedTasks.js","components/Tasks/UncompletedTasks/UncompletedTasks.js","components/Navigation/Navigation.js","components/Auth/useInputChange.js","components/Auth/Auth.js","redirect.js","serviceWorker.js","reducers/tasks.js","reducers/accordion.js","reducers/completedTasks.js","reducers/uncompletedTasks.js","index.js","hoc/withStyles.module.css"],"names":["module","exports","myTable","form-control","form-inline","nav-item","active","accordion","title","title-text","content","content-open","content-text","content-text-open","fa-angle-down","fa-rotate-180","arrow-wrapper","todoStyle","StyledComponent","_Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","classes","style","border","padding","props","Component","DeleteButton","type","onClick","window","confirm","concat","task","onDelete","_id","index_es","icon","faTrashAlt","Task","inputProps","doneClasses","doneText","done","defaultChecked","push","passedDate","id","detail","viewDate","assign","onChange","htmlFor","join","UI_DeleteButton","openAccordion","date","console","log","setTasks","tasks","setOnTaskDone","setCompletedTasks","setOnTaskUndone","intializingDateTime","Date","setHours","initUncompletedTasks","dispatch","axios","get","then","res","data","objectSpread","viewTasks","filter","d","sort","b","setUncompletedTasks","connect","state","acco","onOpenAcco","actions","contentClass","classNames","open","contentTextClass","content-text content-text-open","contentClassModules","split","map","cl","contentTextClassModules","sections","Fragment","children","ts","changeDone","t","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","put","sent","stop","_x","delId","delete","setDeleteTask","catch","err","CSSModules","furtherDates","furtherDatesTasksArray","toConsumableArray","Set","length","AccodionSingle","styleName","el","newDate","getTheDay","getDate","getTheMonth","getMonth","getTheYear","getFullYear","convertToViewDate","Tasks_Task_Task","colSpan","styles","allowMultiple","clearBtn","clearCompleted","onSubmit","getTasks","clc","name","placeholder","react_datepicker_es","selected","selectedDate","changeDateHandler","faPlus","Aux","App","_PureComponent","_getPrototypeOf2","_this","_len","args","Array","_key","call","isValid","getToday","getMaxId","tasksIds","Math","max","getInput","e","target","elements","maxId","getTheDate","newTask","toString","reTitle","reDetail","test","setState","find","alert","onAddTask","validationCheck","preventDefault","input","re","_ref2","defineProperty","calculateClass","Type","render","components_Form_Form","clearLocalStorage","clearAllTasks","clearCompletedTasks","bind","assertThisInitialized","Tasks_Tasks_Tasks","clicked","openAccLi","cur","currentAccLi","today","onTasksInit","PureComponent","post","status","CompletedTasks","onInitComTasks","comTs","setDeleteCompletedTask","onUncomTasksInit","unComTs","setDeleteUncompletedTask","Navigation","NavLink","exact","to","activeClassName","useInputChange","email","password","isSigninUrl","url","newUser","returnSecureToken","Auth","_useState","useState","_useState2","slicedToArray","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","isSignin","setIsSignin","changeSignupHandler","href","redirect","components_Navigation_Navigation","Switch","Route","path","component","UncompletedTasks","Boolean","location","hostname","match","initialState","tasksReducer","undefined","action","elem","accordionReducer","completedTasksReducer","composeEnhancers","compose","rootReducer","combineReducers","uncompletedTasksReducer","store","createStore","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","basename","src_redirect","document","getElementById","navigator","serviceWorker","ready","registration","unregister","mb-5","my-5","mt-5","container","App-class"],"mappings":"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","file":"static/js/main.7c8c2977.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myTable\":\"Tasks_myTable__33MuI\",\"form-control\":\"Tasks_form-control__3y9Ai\",\"form-inline\":\"Tasks_form-inline__2RWLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myTable\":\"CompletedTasks_myTable__3F6ap\",\"form-control\":\"CompletedTasks_form-control__3hQMB\",\"form-inline\":\"CompletedTasks_form-inline__3Dy5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myTable\":\"UncompletedTasks_myTable__25Gb3\",\"form-control\":\"UncompletedTasks_form-control__2R5KE\",\"form-inline\":\"UncompletedTasks_form-inline__997C2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-item\":\"Navigation_nav-item__2G3l0\",\"active\":\"Navigation_active__1ZiqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordion\":\"AccodionSingle_accordion__1VP2x\",\"title\":\"AccodionSingle_title__2wDmM\",\"title-text\":\"AccodionSingle_title-text__2OHVs\",\"active\":\"AccodionSingle_active__2zBfl\",\"content\":\"AccodionSingle_content__1ql2b\",\"content-open\":\"AccodionSingle_content-open__1qFLs\",\"content-text\":\"AccodionSingle_content-text__3fCHt\",\"content-text-open\":\"AccodionSingle_content-text-open__1Ro6K\",\"fa-angle-down\":\"AccodionSingle_fa-angle-down__3aVhG\",\"fa-rotate-180\":\"AccodionSingle_fa-rotate-180__1w0lx\",\"arrow-wrapper\":\"AccodionSingle_arrow-wrapper__3pEjT\"};","import React, { Component } from \"react\";\r\nimport classes from \"./withStyles.module.css\";\r\n\r\n// usually wrapper components (hoc) used to share functions not styles definetly!\r\n// to be changed later to smth useful..\r\nconst todoStyle = StyledComponent => {\r\n  return class extends Component {\r\n    render() {\r\n      return (\r\n        <div className={[classes[\"App-class\"]]}>\r\n          <div\r\n            className={classes[\"container\"]}\r\n            style={{ border: \"1px solid #ccc\" }}\r\n          >\r\n            <div className=\"row\"  style={{padding: '15px 5px'}}>\r\n              <div className=\"col-lg-12 col-sm-12\">\r\n                <StyledComponent {...this.props} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default todoStyle;\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DeleteButton = props => {\r\n  const deleteHandler = () => {\r\n    if (window.confirm(`Are you sure to delete ${props.task.title}?`)) {\r\n      props.onDelete(props.task._id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-danger px-1 py-0\"\r\n      onClick={() => deleteHandler()}\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from 'react';\r\nimport DeleteButton from '../../UI/DeleteButton';\r\n\r\nconst Task = props => {\r\n  let inputProps = {},\r\n    doneClasses = ['form-check-labe'],\r\n    doneText = '';\r\n\r\n  if (props.task.done) {\r\n    inputProps.defaultChecked = true;\r\n    doneClasses.push('text-success');\r\n    doneText = 'Done';\r\n  } else {\r\n    inputProps = {};\r\n    doneClasses.push('text-danger');\r\n    doneText = props.passedDate ? 'Passed!' : 'In progress!';\r\n  }\r\n\r\n  return (\r\n    <tr key={props.task.id}>\r\n      <td>{props.task.title}</td>\r\n      <td>{props.task.detail}</td>\r\n      {props.viewDate ? <td>{props.task.viewDate}</td> : null}\r\n      <td>\r\n        <div className=\"form-check form-check-inline ml-3 d-flex\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            id={props.task._id}\r\n            type=\"checkbox\"\r\n            onChange={props.onChange}\r\n            {...inputProps}\r\n          />\r\n          <label htmlFor={props.task._id} className={doneClasses.join(' ')}>\r\n            {doneText}\r\n          </label>\r\n        </div>\r\n      </td>\r\n\r\n      <td>\r\n        <DeleteButton task={props.task} onDelete={props.onDelete} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const openAccordion = date => {\r\n  console.log('received date', date)\r\n  return {\r\n    type: actionTypes.OPEN_ACCORDION,\r\n    date: date\r\n  };\r\n};\r\n","export const INIT_TASKS = 'INIT_TASKS';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const OPEN_ACCORDION = 'OPEN_ACCORDION';\r\n\r\nexport const INIT_COMPLETED_TASKTS = 'INIT_COMPLETED_TASKTS';\r\nexport const DELETE_COMPLETED_TASK = 'DELETE_COMPLETED_TASK';\r\n\r\nexport const INIT_UNCOMPLETED_TASKTS = 'INIT_UNCOMPLETED_TASKTS';\r\nexport const DELETE_UNCOMPLETED_TASK = 'DELETE_UNCOMPLETED_TASK';\r\n\r\nexport const ON_TASK_DONE = 'ON_TASK_DONE';\r\nexport const ON_TASK_UNDONE = 'ON_TASK_UNDONE';\r\n","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst setAddTask = task => {\r\n  return {\r\n    type: actionTypes.ADD_TASK,\r\n    task,\r\n  };\r\n};\r\n\r\nconst openAcco = (date, status) => {\r\n  return {\r\n    type: actionTypes.OPEN_ACCORDION,\r\n    date,\r\n    status,\r\n  };\r\n};\r\n\r\nconst setTasks = tasks => {\r\n  return {\r\n    type: actionTypes.INIT_TASKS,\r\n    tasks: tasks,\r\n  };\r\n};\r\n\r\nconst setDeleteTask = delId => {\r\n  return {\r\n    type: actionTypes.DELETE_TASK,\r\n    delId,\r\n  };\r\n};\r\n\r\nexport const deleteTask = delId => {\r\n    return dispatch => {\r\n    axios\r\n      .delete('/api/todo/' + delId)\r\n      .then(res => {\r\n        dispatch(setDeleteTask(delId));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addTask = newTask => {\r\n  return dispatch => {\r\n    const task = {\r\n      title: newTask.title,\r\n      detail: newTask.detail,\r\n      done: newTask.done,\r\n      date: newTask.date,\r\n      viewDate: newTask.viewDate,\r\n    };\r\n\r\n    axios.post('/api/todo', task).then(res => {\r\n      dispatch(openAcco(res.data.viewDate, true));\r\n      dispatch(setAddTask(res.data));\r\n    });\r\n  };\r\n};\r\n\r\nexport const initTasks = () => {\r\n  return dispatch => {\r\n    const tasks = [];\r\n\r\n    axios.get('/api/todo').then(res => {\r\n      for (let id in res.data) {\r\n        tasks.push({\r\n          ...res.data[id],\r\n        });\r\n      }\r\n\r\n      dispatch(setTasks(tasks));\r\n    });\r\n  };\r\n};\r\n\r\nconst setOnTaskDone = task => {\r\n  return {\r\n    type: actionTypes.ON_TASK_DONE,\r\n    task,\r\n  };\r\n};\r\n\r\nexport const onTaskDone = (task, tasks) => {\r\n  tasks = tasks.filter(t => t._id !== task._id);\r\n  return async dispatch => {\r\n    const t = await axios.put(`/api/todo/${task._id}`, { done: !task.done });\r\n    dispatch(setTasks(tasks));\r\n    dispatch(setOnTaskDone(task));\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst setCompletedTasks = tasks => {\r\n  return {\r\n    type: actionTypes.INIT_COMPLETED_TASKTS,\r\n    tasks: tasks,\r\n  };\r\n};\r\n\r\nexport const initCompletedTasks = () => {\r\n  return dispatch => {\r\n    const tasks = [];\r\n\r\n    axios.get('/api/todo?done=true').then(res => {\r\n      for (let id in res.data) {\r\n        tasks.push({\r\n          ...res.data[id],\r\n        });\r\n      }\r\n\r\n      dispatch(setCompletedTasks(tasks));\r\n    });\r\n  };\r\n};\r\n\r\nconst setDeleteCompletedTask = delId => {\r\n  return {\r\n    type: actionTypes.DELETE_COMPLETED_TASK,\r\n    delId,\r\n  };\r\n};\r\n\r\nexport const deleteCompletedTask = delId => {\r\n  return dispatch => {\r\n    axios\r\n      .delete('/api/todo/' + delId)\r\n      .then(res => {\r\n        dispatch(setDeleteCompletedTask(delId));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n};\r\n\r\nconst setOnTaskUndone = task => {\r\n  return {\r\n    type: actionTypes.ON_TASK_UNDONE,\r\n    task,\r\n  };\r\n};\r\n\r\nexport const onTaskUndone = (task, tasks) => {\r\n  console.log('onTaskUndone', tasks, task);\r\n  tasks = tasks.filter(t => t._id !== task._id);\r\n  return async dispatch => {\r\n    const t = await axios.put(`/api/todo/${task._id}`, { done: !task.done });\r\n    dispatch(setCompletedTasks(tasks));\r\n    dispatch(setOnTaskUndone(task));\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst intializingDateTime = date => {\r\n  let d;\r\n\r\n  if (date) {\r\n    const newDate = new Date(date);\r\n    d = newDate.setHours(0, 0, 0, 0);\r\n    return d;\r\n  }\r\n\r\n  const newDate = new Date();\r\n  d = newDate.setHours(0, 0, 0, 0);\r\n  return d;\r\n};\r\n\r\nconst setUncompletedTasks = tasks => {\r\n  return {\r\n    type: actionTypes.INIT_UNCOMPLETED_TASKTS,\r\n    tasks: tasks,\r\n  };\r\n};\r\n\r\nexport const initUncompletedTasks = () => {\r\n  return dispatch => {\r\n    const tasks = [];\r\n\r\n    axios.get('/api/todo').then(res => {\r\n      for (let id in res.data) {\r\n        tasks.push({\r\n          ...res.data[id],\r\n        });\r\n      }\r\n      const viewTasks = tasks\r\n        .filter(d => {\r\n          const d1 = intializingDateTime(),\r\n            d2 = intializingDateTime(d.date);\r\n\r\n          return d1 > d2;\r\n        })\r\n        .sort((a, b) => {\r\n          a = new Date(a.date);\r\n          b = new Date(b.date);\r\n          return b < a ? -1 : b > a ? 1 : 0;\r\n        });\r\n\r\n      dispatch(setUncompletedTasks(viewTasks));\r\n    });\r\n  };\r\n};\r\n\r\nconst setDeleteUncompletedTask = delId => {\r\n  return {\r\n    type: actionTypes.DELETE_UNCOMPLETED_TASK,\r\n    delId,\r\n  };\r\n};\r\n\r\nexport const deleteUncompletedTask = delId => {\r\n  return dispatch => {\r\n    axios\r\n      .delete('/api/todo/' + delId)\r\n      .then(res => {\r\n        dispatch(setDeleteUncompletedTask(delId));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n};\r\n\r\nconst setOnTaskDone = task => {\r\n  return {\r\n    type: actionTypes.ON_TASK_DONE,\r\n    task\r\n  }\r\n}\r\n\r\nexport const onUncompletedTaskDone = (task, tasks) => {\r\n  tasks = tasks.filter(t => t._id !== task._id);\r\n  return async dispatch => {\r\n    const t = await axios.put(`/api/todo/${task._id}`, { done: !task.done });\r\n    dispatch(initUncompletedTasks(tasks));\r\n    dispatch(setOnTaskDone(task));\r\n  };\r\n};","import React from \"react\";\r\nimport classes from \"./AccodionSingle.module.css\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions/index\";\r\n\r\nconst AccordionSingle = props => {\r\n  // const sections = (\r\n  //   <>\r\n  //     <div className={props.cur.open && props.cur.date === data.date? [classes.title, classes.active].join(\" \"): classes.title} onClick={() => props.clicked(data.date)}>\r\n\r\n  //       <div className={classes[\"arrow-wrapper\"]}>\r\n  //       <i className={props.cur.open && props.cur.date === data.date? \"fa fa-angle-down fa-rotate-180\" : \"fa fa-angle-down\"}></i>\r\n  //       </div>\r\n\r\n  //       <span className=\"title-text\">\r\n  //         {data.title}\r\n  //       </span>\r\n\r\n  //     </div>\r\n\r\n  //     <div className={contentClassModules.join(\" \")}>\r\n\r\n  //       <div className={contentTextClassModules.join(\" \")}>\r\n  //         {data.content}\r\n  //       </div>\r\n\r\n  //     </div>\r\n  //   </>\r\n  // )\r\n\r\n  const contentClass = classNames(\"content\", {\r\n      \"content-open\": props.acco.open && props.acco.date === props.date\r\n    }),\r\n    contentTextClass = classNames(\"content-text\", {\r\n      \"content-text content-text-open\":\r\n        props.acco.open && props.acco.date === props.date\r\n    });\r\n\r\n  const contentClassModules = contentClass.split(\" \").map(cl => {\r\n      return classes[cl];\r\n    }),\r\n    contentTextClassModules = contentTextClass.split(\" \").map(cl => {\r\n      return classes[cl];\r\n    });\r\n\r\n  const sections = (\r\n    <>\r\n      <div\r\n        className={\r\n          props.acco.open && props.acco.date === props.date\r\n            ? [classes.title, classes.active].join(\" \")\r\n            : classes.title\r\n        }\r\n        onClick={() => props.onOpenAcco(props.date)}\r\n      >\r\n        <div className={classes[\"arrow-wrapper\"]}>\r\n          <i\r\n            className={\r\n              props.acco.open && props.acco.date === props.date\r\n                ? \"fa fa-angle-down fa-rotate-180\"\r\n                : \"fa fa-angle-down\"\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <span className=\"title-text\">{props.date}</span>\r\n      </div>\r\n\r\n      <div className={contentClassModules.join(\" \")}>\r\n        <div className={contentTextClassModules.join(\" \")}>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return <div className={classes.accordion}>{sections}</div>;\r\n};\r\n\r\nconst mapStateToProp = state => {\r\n  return {\r\n    acco: state.acco\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOpenAcco: date => dispatch(actions.openAccordion(date))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProp,\r\n  mapDispatchToProps\r\n)(AccordionSingle);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CSSModules from 'react-css-modules';\r\n\r\nimport '../../../css/bootstrap.min.css';\r\nimport styles from './Tasks.module.css';\r\nimport Task from '../Task/Task';\r\nimport AccordionSingle from '../../UI/AccodionSingle/AccodionSingle';\r\nimport * as actions from '../../../actions/index';\r\n\r\nconst Tasks = props => {\r\n  // const completedTasks = props.tasks.filter((elem) => elem.done === true);\r\n\r\n  const convertToViewDate = date => {\r\n    const newDate = new Date(date),\r\n      getTheDay = newDate.getDate(),\r\n      getTheMonth = newDate.getMonth() + 1,\r\n      getTheYear = newDate.getFullYear();\r\n    return `${getTheDay}/${getTheMonth}/${getTheYear}`;\r\n  };\r\n\r\n  // * First way to comapre two dates including 'today' by converting 'viewDate' into Date type with current time\r\n  // as these dates will be just created so they will have same time and that will results that we can catch 'today'\r\n  // with the equal comparsion sign (=) when comapring the task date with today.\r\n\r\n  // * Without this, it is almost impossible to get the current comparing time (that we get instantly from new Date())\r\n  // same as the task creation time, weither it will be after or before.\r\n\r\n  // 1.\r\n  const convertViewtoDate = viewDate => {\r\n    let splitDate = viewDate.split('/');\r\n    let newDate = new Date();\r\n\r\n    newDate.setDate(splitDate[0]);\r\n    newDate.setMonth(splitDate[1] - 1);\r\n    newDate.setFullYear(splitDate[2]);\r\n\r\n    return newDate;\r\n  };\r\n\r\n  // Another solution is to set both times of the two dates before comparing, which is sightky better and safer as we are no depending\r\n  // on the creation time of the tasks or today's date\r\n\r\n  //2.\r\n  const intializingDateTime = date => {\r\n    let d;\r\n\r\n    if (date) {\r\n      const newDate = new Date(date);\r\n      d = newDate.setHours(0, 0, 0, 0);\r\n      return d;\r\n    }\r\n\r\n    const newDate = new Date();\r\n    d = newDate.setHours(0, 0, 0, 0);\r\n    return d;\r\n  };\r\n\r\n  // 1.\r\n  // const today = new Date(),\r\n  //   date1 = convertToViewDate(today);\r\n\r\n  const viewTasks = props.tasks\r\n    .filter(d => {\r\n      // 1.\r\n      // const d1 = convertViewtoDate(date1),\r\n      //   d2 = convertViewtoDate(d.viewDate);\r\n\r\n      // 2.\r\n      const d1 = intializingDateTime(),\r\n        d2 = intializingDateTime(d.date);\r\n\r\n      return d1 <= d2;\r\n    })\r\n    .sort((a, b) => {\r\n      a = new Date(a.date);\r\n      b = new Date(b.date);\r\n      return b > a ? -1 : b < a ? 1 : 0;\r\n    });\r\n\r\n  const furtherDates = viewTasks.map(task => task.viewDate),\r\n    furtherDatesTasksArray = [...new Set(furtherDates)];\r\n\r\n  // console.log(furtherDatesTasksArray)\r\n\r\n  return props.tasks.length ? (\r\n    furtherDatesTasksArray.map(date => {\r\n      return (\r\n        <AccordionSingle key={date} date={date}>\r\n          {/* <table className={[classes[\"myTable\"], classes[\"mb-2\"]].join(' ')}> */}\r\n          <table styleName=\"myTable\" className=\"mb-2\">\r\n            <thead>\r\n              <tr className=\"thead-dark\">\r\n                <th>Title</th>\r\n                <th>Detail</th>\r\n                <th>Status</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {viewTasks.map(el => {\r\n                return date === convertToViewDate(el.date) ? (\r\n                  viewTasks.length ? (\r\n                    <Task\r\n                      key={el._id}\r\n                      task={el}\r\n                      onChange={() => props.changeDone(el, viewTasks)}\r\n                      onDelete={props.onDelete}\r\n                    />\r\n                  ) : (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"4\"\r\n                        className=\"text-center mx-auto text-success py-4\"\r\n                      >\r\n                        All tasks are done..\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                ) : null;\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </AccordionSingle>\r\n      );\r\n    })\r\n  ) : (\r\n    <p>No tasks added yet.</p>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.ts.tasks,\r\n    accordion: state.acco,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOpenAcco: date => dispatch(actions.openAccordion(date)),\r\n    changeDone: (task, tasks) => dispatch(actions.onTaskDone(task, tasks)),\r\n    onDelete: id => dispatch(actions.deleteTask(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CSSModules(Tasks, styles, { allowMultiple: true }));\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// import classes from './Form.module.css'\r\n\r\nconst Form = props => {\r\n  let clearBtn = null;\r\n\r\n  if (props.tasks.length) {\r\n    clearBtn = (\r\n      <div className=\"col-md-2 col-sm-12 mt-4 pt-3\">\r\n\r\n        {/* {props.tasks.filter(e => e.done === true).length ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-warning\"\r\n            onClick={props.clearCompleted}\r\n          >\r\n            {' '}\r\n            <FontAwesomeIcon icon={faTrashAlt} /> Completed{' '}\r\n          </button>\r\n        ) : null} */}\r\n\r\n        {/* Temporary here */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-warning\"\r\n            onClick={props.clearCompleted}\r\n          >\r\n            {' '}\r\n            <FontAwesomeIcon icon={faTrashAlt} /> Completed{' '}\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // let isValid = 'form-control';\r\n\r\n  // if(props.isValid.detail === 'invalid'){\r\n  //   isValid = \"form-control is-invalid\"\r\n  // }else if (props.isValid.detail === 'is-valid'){\r\n  //   isValid = \"form-control is-valid\"\r\n  // }\r\n\r\n  return (\r\n    <div className=\"mx-auto pb-3\">\r\n      <form\r\n        className=\"needs-validation form-inline mx-auto \"\r\n        onSubmit={props.getTasks}\r\n      >\r\n        <div className=\"col-lg-3 col-md-3 col-sm-12 pt-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"validationCustom01\" className=\"d-block\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"validationCustom01\"\r\n              className={props.clc('title')}\r\n              name=\"title\"\r\n              placeholder=\"Enter task title\"\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              Please enter a task title between 2 and 12 letters!\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-3 col-sm-12 pt-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"validationCustom02\">Detail</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"validationCustom02\"\r\n              className={props.clc('detail')}\r\n              name=\"detail\"\r\n              placeholder=\"Enter task detail\"\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              Please enter a task detail between 5 and 35 letters!\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-2 col-md-2 col-sm-12 pt-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"validationCustom01\">Date</label>\r\n            <DatePicker\r\n              className=\"form-control custom-d-p\"\r\n              selected={props.selectedDate}\r\n              onChange={props.changeDateHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-2 col-sm-12 mt-4 pt-3\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-block text-center mx-auto btn-success\"\r\n          >\r\n            {' '}\r\n            <FontAwesomeIcon icon={faPlus} /> ADD{' '}\r\n          </button>\r\n        </div>\r\n\r\n        {clearBtn}\r\n\r\n        {/* {props.tasksLength ? <div className=\"col-md-2 mt-4\"><input type=\"button\" className=\"btn btn-block btn-danger\" onClick={props.clearLocalStorage} value=\"Clear All Tasks\" /></div>: null} */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.ts.tasks,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Form);\r\n","import React from 'react';\r\n\r\nexport const Aux = props => props.children;\r\n\r\nexport const DivWithClass = props => {\r\n  return (\r\n    <div className={props.classes}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n// <DivWithClass classes=\"some-class-name\">\r\n//    JSX content..\r\n// </DivWithClass>\r\n\r\nexport const divRaper = (Component, classes) => {\r\n  return (props) => {\r\n    return (\r\n    <div className={classes}>\r\n      <Component {...props}/>\r\n    </div>)\r\n  }\r\n}\r\n// export default divRaper(App, 'some-class-name')","import React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport todoStyle from './hoc/todoStyle';\nimport './App.css';\nimport Tasks from './components/Tasks/Tasks/Tasks';\nimport Form from './components/Form/Form';\nimport { Aux } from './hoc/hoc';\nimport * as actions from './actions/index';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport class App extends PureComponent {\n  state = {\n    date: new Date(),\n    isValid: {\n      title: '',\n      detail: '',\n    },\n  };\n\n  componentDidMount() {\n    const today = this.getToday();\n    this.props.onTasksInit();\n    this.props.onOpenAcco(today);\n  }\n\n  componentWillUnmount() {\n    this.props.onOpenAcco(null);\n  }\n\n  getToday = () => {\n    const getToday = new Date(),\n      getTheDay = getToday.getDate(),\n      getTheMonth = getToday.getMonth() + 1,\n      getTheYear = getToday.getFullYear();\n\n    return `${getTheDay}/${getTheMonth}/${getTheYear}`;\n  };\n\n  getMaxId = () => {\n    let tasks = [...this.props.tasks],\n      tasksIds = tasks.map(task => {\n        return task.id;\n      });\n\n    let maxId = tasks.length ? Math.max(...tasksIds) : 0;\n    return maxId;\n  };\n\n  getInput = e => {\n    let title = e.target.elements.title.value,\n      detail = e.target.elements.detail.value,\n      done = false,\n      maxId = this.getMaxId(),\n      getTheDate = this.state.date,\n      getTheDay = getTheDate.getDate(),\n      getTheMonth = getTheDate.getMonth() + 1,\n      getTheYear = getTheDate.getFullYear(),\n      viewDate = `${getTheDay}/${getTheMonth}/${getTheYear}`;\n\n    const newTask = {\n      //id: new Date().valueOf()\n      id: maxId + 1,\n      title,\n      detail,\n      done,\n      date: this.state.date.toString(),\n      viewDate,\n    };\n\n    const reTitle = /^[a-zA-z ]{2,20}$/;\n    const reDetail = /^[a-zA-z, ]{5,350}$/;\n\n    if (!reTitle.test(title) || !reDetail.test(detail)) {\n      this.validationCheck('title', title, reTitle);\n      this.validationCheck('detail', detail, reDetail);\n    } else {\n      this.setState({\n        isValid: {\n          title: true,\n          detail: true,\n        },\n      });\n\n      // const isTitle = this.state.tasks.find(e => e.title === newTask.title),\n      //   isDetail = this.state.tasks.find(e => e.detail === newTask.detail),\n      //   isDone = this.state.tasks.find(e => e.done === newTask.done);\n      const inValid = this.props.tasks.find(e => {\n        return (\n          e.title === newTask.title &&\n          e.detail === newTask.detail &&\n          e.done === newTask.done\n        );\n      });\n\n      if (inValid) {\n        alert(\n          'This task title and detail have been added before and not marked as done yet!'\n        );\n      } else {\n        this.props.onAddTask(newTask);\n\n        e.target.elements.title.value = '';\n        e.target.elements.detail.value = '';\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  clearCompletedTasks() {\n    if (window.confirm('Are you sure to delete all completed tasks?')) {\n      axios.delete(`/api/todo?delete-all=true`);\n    }\n  }\n\n  validationCheck = (type, input, re) => {\n    if (!re.test(input)) {\n      this.setState(({ isValid }) => ({\n        isValid: {\n          ...isValid,\n          [type]: 'is-invalid',\n        },\n      }));\n    } else {\n      this.setState(({ isValid }) => ({\n        isValid: {\n          ...isValid,\n          [type]: 'is-valid',\n        },\n      }));\n    }\n  };\n\n  calculateClass = type => {\n    const Type = this.state.isValid[type];\n\n    let isValid = ['form-control'];\n\n    if (Type === 'is-invalid') {\n      isValid.push('is-invalid');\n    } else if (Type === 'is-valid') {\n      isValid.push('is-valid');\n    }\n\n    return isValid.join(' ');\n  };\n\n  changeDateHandler = d => {\n    this.setState({ date: d });\n  };\n\n  render = () => {\n    return (\n      // for testing some high order componenet wrapping the inner contenet\n      <Aux>\n        <React.Fragment>\n          <>\n            <Form\n              getTasks={this.getInput}\n              clc={this.calculateClass}\n              clearLocalStorage={this.clearAllTasks}\n              clearCompleted={this.clearCompletedTasks.bind(this)}\n              changeDateHandler={this.changeDateHandler}\n              selectedDate={this.state.date}\n            />\n\n            <Tasks clicked={this.openAccLi} cur={this.state.currentAccLi} />\n          </>\n        </React.Fragment>\n      </Aux>\n    );\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.ts.tasks,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTasksInit: () => dispatch(actions.initTasks()),\n    onAddTask: newTask => dispatch(actions.addTask(newTask)),\n    onOpenAcco: date => dispatch(actions.openAccordion(date)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(todoStyle(App));\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CSSModules from 'react-css-modules';\r\n\r\nimport Task from '../Task/Task';\r\nimport styles from './CompletedTasks.module.css';\r\nimport * as actions from '../../../actions/index';\r\n\r\nclass CompletedTasks extends Component {\r\n  componentDidMount() {\r\n    this.props.onInitComTasks();\r\n  }\r\n\r\n  render() {\r\n    //   console.log(completedTasks);\r\n    console.log(this.props.tasks);\r\n\r\n    return this.props.tasks.length ? (\r\n      <table styleName=\"myTable\" className=\"mb-2\">\r\n        <thead>\r\n          <tr className=\"thead-dark\">\r\n            <th>Title</th>\r\n            <th>Detail</th>\r\n            <th>Date</th>\r\n            <th>Status</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map(el => {\r\n            return (\r\n              <Task\r\n                key={el._id}\r\n                task={el}\r\n                onChange={() => this.props.changeDone(el, this.props.tasks)}\r\n                onDelete={this.props.onDelete}\r\n                viewDate\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    ) : (\r\n      <p>No tasks added yet.</p>\r\n    );\r\n\r\n    //   <p>\r\n    //     {this.props.tasks.map(t => {\r\n    //       return <p>{t.title}</p>;\r\n    //     })}\r\n    //   </p>\r\n    //);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.comTs.tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitComTasks: () => dispatch(actions.initCompletedTasks()),\r\n    changeDone: (task, tasks) => dispatch(actions.onTaskUndone(task, tasks)),\r\n    onDelete: id => dispatch(actions.deleteCompletedTask(id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CSSModules(CompletedTasks, styles));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CSSModules from 'react-css-modules';\r\n\r\nimport Task from '../Task/Task';\r\nimport styles from './UncompletedTasks.module.css';\r\nimport * as actions from '../../../actions/index';\r\n\r\nclass CompletedTasks extends Component {\r\n  componentDidMount() {\r\n    this.props.onUncomTasksInit();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.tasks);\r\n\r\n    return this.props.tasks.length ? (\r\n      <table styleName=\"myTable\" className=\"mb-2\">\r\n        <thead>\r\n          <tr className=\"thead-dark\">\r\n            <th>Title</th>\r\n            <th>Detail</th>\r\n            <th>Date</th>\r\n            <th>Status</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map(el => {\r\n            return (\r\n              <Task\r\n                key={el._id}\r\n                task={el}\r\n                onChange={() => this.props.changeDone(el, this.props.tasks)}\r\n                viewDate\r\n                onDelete={this.props.onDelete}\r\n                passedDate\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    ) : (\r\n      <p>No tasks added yet.</p>\r\n    );\r\n\r\n    //   <p>\r\n    //     {this.props.tasks.map(t => {\r\n    //       return <p>{t.title}</p>;\r\n    //     })}\r\n    //   </p>\r\n    //);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.unComTs.tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUncomTasksInit: () => dispatch(actions.initUncompletedTasks()),\r\n    changeDone: (task, tasks) => dispatch(actions.onUncompletedTaskDone(task, tasks)),\r\n    onDelete: id => dispatch(actions.deleteUncompletedTask(id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CSSModules(CompletedTasks, styles));\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from './Navigation.module.css'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n            <div className=\"container my-3\">\r\n            <div className=\"row\">\r\n              {/* <div className=\"col-lg-12 col-sm-12\"></div> */}\r\n            <NavLink\r\n                exact={true}\r\n                to=\"/\"\r\n                className={classes['nav-item']}\r\n                activeClassName={classes['active']}>Home</NavLink>\r\n            <NavLink\r\n                to=\"/completed-tasks\"\r\n                className={classes['nav-item']}\r\n                activeClassName={classes['active']}>Completed Tasks</NavLink>\r\n            <NavLink\r\n                to=\"/uncompleted-tasks\"\r\n                className={classes['nav-item']}\r\n                activeClassName={classes['active']}>Passed Tasks</NavLink>\r\n            <NavLink\r\n                to=\"/auth\"\r\n                className={classes['nav-item']}\r\n                activeClassName={classes['active']}>Login</NavLink>\r\n            </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useInputChange = (email, password, isSigninUrl) => {\r\n\r\n    const newUser = {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n    };\r\n\r\n    let url;\r\n    url = isSigninUrl ?\r\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBU6LGZnBTOUZ59OEn7VVCldMhKNz3_4Zw' :\r\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBU6LGZnBTOUZ59OEn7VVCldMhKNz3_4Zw';\r\n\r\n    axios.post(url, newUser)\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err));\r\n\r\n}\r\n\r\nexport default useInputChange;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport useInputChange from './useInputChange'\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isSignin, setIsSignin] = useState(true);\r\n\r\n    const emailChangeHandler = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const passwordChangeHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        // const newUser = {\r\n        //     email,\r\n        //     password,\r\n        //     returnSecureToken: true\r\n        // };\r\n\r\n        // let url;\r\n        // url = urlType.changeTo === 'signin' ?\r\n        //     'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBU6LGZnBTOUZ59OEn7VVCldMhKNz3_4Zw' :\r\n        //     'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBU6LGZnBTOUZ59OEn7VVCldMhKNz3_4Zw';\r\n\r\n        // axios.post(url, newUser)\r\n        //     .then(res => console.log(res))\r\n        //     .catch(err => console.log(err));\r\n\r\n        useInputChange(email, password, isSignin)\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    const changeSignupHandler = (e) => {\r\n        isSignin ?\r\n            setIsSignin(false) :\r\n            setIsSignin(true);\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>{isSignin ? 'Sign in' : 'Sign up'}</h2>\r\n            <form onSubmit={submitHandler}>\r\n                <input type=\"email\" placeholder=\"E-mail\" value={email} onChange={emailChangeHandler} />\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={passwordChangeHandler} />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            {isSignin ? <span>If you don't have an account, please, <a href=\"#\" onClick={changeSignupHandler}>Sign up</a> now</span> :\r\n                <span>If you have an account, please, <a href=\"#\" onClick={changeSignupHandler}>Sign in</a> now</span>}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport CompletedTasks from './components/Tasks/CompletedTasks/CompletedTasks';\r\nimport UncompletedTasks from './components/Tasks/UncompletedTasks/UncompletedTasks';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Auth from './components/Auth/Auth';\r\nimport todoStyle from './hoc/todoStyle'\r\n\r\nconst redirect = props => {\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Switch>\r\n        <Route exact path=\"/completed-tasks\" component={todoStyle(CompletedTasks)} />\r\n        <Route exact path=\"/uncompleted-tasks\" component={todoStyle(UncompletedTasks)} />\r\n        <Route exact path=\"/auth\" component={todoStyle(Auth)} />\r\n        <Route exact path=\"/\" component={App} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default redirect;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n};\r\n\r\nconst tasksReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: action.tasks,\r\n      };\r\n\r\n    case actionTypes.ADD_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.task],\r\n      };\r\n\r\n    case actionTypes.DELETE_TASK:\r\n      const tasks = [...state.tasks.filter(elem => elem._id !== action.delId)];\r\n      return {\r\n        ...state,\r\n        tasks,\r\n      };\r\n\r\n    case actionTypes.ON_TASK_UNDONE:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat(action.task),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  date: null,\r\n  open: false\r\n};\r\n\r\nconst accordionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.OPEN_ACCORDION:\r\n      console.log('reducer data', action.date)\r\n      console.log('acc state', state)\r\n      if (state.date !== action.date && state.open) {\r\n        return {\r\n          date: action.date,\r\n          open: true\r\n        };\r\n      } else {\r\n        return {\r\n          date: action.date,\r\n          open: action.status ? action.status : !state.open\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default accordionReducer;\r\n\r\n// The if statement functionality, if (state.date !== action.date && state.open)\r\n// * If you have an opened accordion and you click on another one, the new clicked accordion tap will be\r\n// opened and the previous one will be closed.\r\n// * Withouth this condition, the current opened accordion will just be closed by click on a new accordion tap\r\n// and the new one won't be opened instantly.\r\n\r\n// So this condition simply, will always open the new clicked accodrion tap when clicking on a different date accordion tap, while it will toggle on same date click accordion tap.\r\n\r\n// else toggle the current state open/close\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n};\r\n\r\nconst completedTasksReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_COMPLETED_TASKTS:\r\n      return {\r\n        ...state,\r\n        tasks: action.tasks,\r\n      };\r\n\r\n    case actionTypes.DELETE_COMPLETED_TASK:\r\n      const tasks = [...state.tasks.filter(elem => elem._id !== action.delId)];\r\n      return {\r\n        ...state,\r\n        tasks,\r\n      };\r\n\r\n    case actionTypes.ON_TASK_DONE:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat(action.task),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default completedTasksReducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n};\r\n\r\nconst completedTasksReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_UNCOMPLETED_TASKTS:\r\n      return {\r\n        ...state,\r\n        tasks: action.tasks,\r\n      };\r\n\r\n    case actionTypes.DELETE_UNCOMPLETED_TASK:\r\n    const tasks = [...state.tasks.filter(elem => elem._id !== action.delId)];\r\n      return {\r\n        ...state,\r\n        tasks,\r\n      };\r\n\r\n    case actionTypes.ON_TASK_DONE:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat(action.task),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default completedTasksReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport Redirect from './redirect';\nimport * as serviceWorker from \"./serviceWorker\";\nimport tasksReducer from \"./reducers/tasks\";\nimport accordionReducer from \"./reducers/accordion\";\nimport completedTasksReducer from \"./reducers/completedTasks\";\nimport uncompletedTasksReducer from \"./reducers/uncompletedTasks\";\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n    \nconst rootReducer = combineReducers({\n  ts: tasksReducer,\n  acco: accordionReducer,\n  comTs: completedTasksReducer,\n  unComTs: uncompletedTasksReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/todo/\">\n      <Redirect />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mb-5\":\"withStyles_mb-5__2JOlt\",\"my-5\":\"withStyles_my-5__RnXCR\",\"mt-5\":\"withStyles_mt-5__3Ce8Z\",\"container\":\"withStyles_container__2XGZw\",\"App-class\":\"withStyles_App-class__3DHzh\"};"],"sourceRoot":""}